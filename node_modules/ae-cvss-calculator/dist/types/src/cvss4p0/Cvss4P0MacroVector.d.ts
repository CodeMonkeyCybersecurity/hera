import { VectorComponent, VectorComponentValue } from "../CvssVector";
import { EQ } from "./EQ";
import { ICvss4P0 } from "./ICvss4P0";
export declare class Cvss4P0MacroVector {
    private readonly eq1;
    private readonly eq2;
    private readonly eq3;
    private readonly eq4;
    private readonly eq5;
    private readonly eq6;
    private readonly jointEq3AndEq6;
    constructor(eq1: EQ, eq2: EQ, eq3: EQ, eq4: EQ, eq5: EQ, eq6: EQ, jointEq3AndEq6: EQ);
    static fromVector(vector: ICvss4P0): Cvss4P0MacroVector;
    private static findMatchingEQ;
    getEq1(): EQ;
    getEq2(): EQ;
    getEq3(): EQ;
    getEq4(): EQ;
    getEq5(): EQ;
    getEq6(): EQ;
    getJointEq3AndEq6(): EQ;
    getEQ(i: number): EQ;
    getLookupTableScore(): number;
    static getMacroVectorScore(macroVector: Cvss4P0MacroVector): number;
    toString(): string;
    deriveNextLower(i: number): Cvss4P0MacroVector;
    private static getIndexInDefinitions;
    private getNextLower;
    private static is;
    static EQ_ERROR_DEFINITION: EQ;
    static EQ1_DEFINITIONS: EQ[];
    static EQ2_DEFINITIONS: EQ[];
    static EQ3_DEFINITIONS: EQ[];
    static EQ4_DEFINITIONS: EQ[];
    static EQ5_DEFINITIONS: EQ[];
    static EQ6_DEFINITIONS: EQ[];
    static JOINT_EQ3_EQ6_DEFINITIONS: EQ[];
    static getComparisonMetricComponent<T extends VectorComponentValue>(vector: ICvss4P0, component: VectorComponent<T>): VectorComponentValue;
    static getComparisonMetric(vector: ICvss4P0, component: string): VectorComponentValue;
}
